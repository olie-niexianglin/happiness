--  遗传算法( GA , Genetic Algorithm )
    定义:遗传算法是计算机科学人工智能领域中用于解决最优化的一种搜索启发式算法，是进化算法的一种。
         这种启发式通常用来生成有用的解决方案来优化和搜索问题。进化算法最初是借鉴了进化生物学中的一些现象而发展起来的，
         这些现象包括遗传、突变、自然选择以及杂交等。遗传算法通常实现方式为一种计算机模拟。
         对于一个最优化问题，一定数量的候选解（称为个体）的抽象表示（称为染色体）的种群向更好的解进化。
         传统上，解用二进制表示（即0和1的串），但也可以用其他表示方法。进化从完全随机个体的种群开始，之后一代一代发生。
         在每一代中，整个种群的适应度被评价，从当前种群中随机地选择多个个体（基于它们的适应度），
         通过自然选择和突变产生新的生命种群，该种群在算法的下一次迭代中成为当前种群。

    灵感:
         遗传算法是受达尔文的进化论的启发，借鉴生物进化过程而提出的一种启发式搜索算法。
         种群(Population)：生物的进化以群体的形式进行，这样的一个群体称为种群。
         个体：组成种群的单个生物。
         基因 ( Gene ) ：一个遗传因子。
         染色体 ( Chromosome ) ：包含一组的基因。
         生存竞争，适者生存：对环境适应度高的、牛B的个体参与繁殖的机会比较多，后代就会越来越多。适应度低的个体参与繁殖的机会比较少，后代就会越来越少。
         遗传与变异：新个体会遗传父母双方各一部分的基因，同时有一定的概率发生基因变异。
    执行:
         1 初始化:创建一个初始种群。这种群通常是随机生成的，种群的大小根据实际情况而定。
         2 评价:计算每一个个体的适应值。适应值是根据我们所期望的要求进行计算。这些要求可以是简单的“更快的算法更好”，或复杂的 “坚固的材料更好，但不要太重”。(demo中getFitness函数根据设定的预期结果solution计算个体的适应值)。
         3 选择:我们要不断提高种群的整体适应值。我们选择当前这一代种群中较优秀的，即适应值高的。有几个不同的选择方法，但基本思想是一样的。（demo中tournamentSelection函数进行选择）
         4 交叉:交叉过程中，利用上面一步选择到的优秀个体进行交叉(暂且理解为make love的过程吧~)。主要目的是通过由两个或两个以上优秀的个体，来创建下一代，让下一代继承一些优秀的特征，即所谓虎父无犬子。(demo中crossover函数进行交叉操作)
         5 突变:突变是一个小概率的事件，我们需要为算法添加一些随机性。(demo中mutate进行突变操作)
           重复2-5，直到达到我们期望的结果。
    缺点:
         想象一下，你被告知要戴上眼罩，然后你被放置在同一座山的底部，让你找最高峰 。你是唯一的选择就是不断爬山，直到你发现你不能在往上爬了。你可能会宣布你已经找到了高峰，但你怎么知道？看下面这个图，Local optimum就是局部最优，Peak就是全局最优。虽然遗传算法往往可以避免掉最优最优，当不是我们不能保证一定能找到全局最优解。遗传算法是属于近似算法，适合解决复杂问题。