模板模式(Template)：
    来自网络的定义：
       1 定义一个操作中算法的骨架，将一些步骤的执行延迟到其子类中。
       2 在一个方法中定义了一个算法的骨架或者步骤，而将一些步骤延迟到子类中去实现。
         模板方法使得子类可以在不改变算法结构的情况下，重新定义算法中的某一些步骤。



    来自网络的关于模板方法的特点
        ----------------------------------------------------------------------------------------------------------------
        模板方法在基类中定义了一个操作的流程顺序，能够保证该步骤按序进行，有一些步骤的具体实现在基类中已经声明，
        而将一些变化的步骤的具体实现交给了子类去实现，从而就达到了延迟一些步骤到子类中，模板方法一个最大的好处就
        是能够设定一个业务流程能够按照一定严格的顺序执行，控制了整个算法的执行步骤。

        这个方法将算法定义成一组步骤，其中凡是想让子类进行自定义实现的步骤，均定义为抽象方法。
        抽象基类的特点是，一般将模板方法设置为final，这样防止子类覆盖该算法的步骤，将一些相同的操作或步骤直
        接在基类中实现，将一些变化的步骤设置为抽象由子类去完成。
        ----------------------------------------------------------------------------------------------------------------


    来自网络关于模板方法的举例
        ----------------------------------------------------------------------------------------------------------------
        假如要泡杯茶和咖啡，要想泡咖啡则需要先将水煮沸，然后用沸水冲泡咖啡，将咖啡倒进杯子，加糖和牛奶。
        要想泡茶叶则需要把水煮沸，然后用沸水冲茶叶，将茶倒入杯子，放点柠檬。
        通过分析，这些操作基本上都是四步骤，顺序都是固定的，且有相同的步骤，则就可以利用模板方法来将泡饮料的过程制作
        一个算法的骨架，将变化的部分抽象出来，让具体的子类去实现。
        ----------------------------------------------------------------------------------------------------------------

    来自网络关于模板方法中的钩子方法
        ----------------------------------------------------------------------------------------------------------------
        当在模板方法中某一些步骤是【可选】的时候，也就是该步骤不一定要执行，可以由【子类】来决定是否要执行，则此时就需要用上钩子
        钩子是一种被声明在抽象类中的方法，但一般来说它只是【空的或者具有默认值】，子类可以实现覆盖该钩子，来设置算法步骤的某一步骤是否要执行。钩子可以让子类实现算法中可选的部分，让子类能够有机会对模板方法中某些一即将发生的步骤做出反应。

